<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="post">
    <resultMap id="data" type="hashMap">
        <result property="CONT" column="CONT" jdbcType="CLOB" javaType="java.lang.String"/>
    </resultMap>

    <select id="getAllPost" parameterType="hashmap" resultType="hashmap">
        select    a.*
            from   (
            select  a.*, level
                 from (
                    select  postid, pa_postid,  userId, reg_date, able, postgn, rownum rn,
                            case able when 'T' then title
                                      when 'F' then '삭제된 게시글 입니다'
                             end as title
                    from    post
                    where   boardid = #{boardId}
                    order by postid desc) a
                 start with pa_postid is null
                 connect by prior postid = pa_postid
                 order siblings by postgn desc) a
            where a.rn between #{pageSize} * (#{page} - 1) + 1 and #{page} * #{pageSize}
    </select>

    <select id="getCntPost" parameterType="int" resultType="int">
        select count(*)
        from post
        where boardid = #{boardId}
    </select>

    <select id="getPost" parameterType="int" resultType="hashmap" resultMap="data">
        select /*+ idex(a pk_post)*/ *
        from post
        where postid = #{postId}
    </select>

    <select id="getPostCom" parameterType="int" resultType="hashmap" resultMap="data">
        select commid, postid, userid, reg_date, able,
            case able when 'T' then cont
                      when 'F' then to_clob('삭제된 댓글 입니다')
            end as CONT
        from post_com
        where postid = #{postId}
        order by commid
    </select>

    <select id="getPostFile" parameterType="int" resultType="hashMap">
        select *
        from post_file
        where postid = #{postId}
        order by fileid
    </select>

    <insert id="regCom" parameterType="hashmap">
        insert into post_com values
        ( POST_COM_SEQ.NEXTVAL, #{postId}, #{userId}, sysdate, 'T', #{cont})
    </insert>

    <insert id="newPost" parameterType="hashMap">
        <selectKey keyProperty="postId" resultType="int" order="AFTER">
            select POST_SEQ.CURRVAL from dual
        </selectKey>
        insert into post values
        (POST_SEQ.NEXTVAL,
        #{boardId},
        #{pa_postId, jdbcType=INTEGER},
        #{title},
        #{userId},
        sysdate,
        'T',
        #{cont},
        nvl(#{postGn, jdbcType=INTEGER},POST_SEQ.CURRVAL))
    </insert>

    <insert id="newFile" parameterType="hashMap">
        insert into post_file values
        (POST_FILE_SEQ.NEXTVAL, #{postId}, #{fileName}, #{path})
    </insert>

    <delete id="delPostFile" parameterType="int">
        delete from post_file
        where postId = #{postId}
    </delete>

    <delete id="delFile" parameterType="int">
        delete from post_file
        where fileId = #{fileId}
    </delete>

    <delete id="delPost" parameterType="hashmap">
        update post set able = 'F' where postId = #{postId} and userId = #{userId}
    </delete>

    <delete id="delPostCom" parameterType="int">
        delete from post_com
        where postId = #{postId}
    </delete>

    <update id="updatePost" parameterType="hashmap">
        update post set title = #{title}, cont = #{cont} where postId = #{postId}
    </update>

    <select id="getFilePath" parameterType="int" resultType="String">
        select realfilepath
        from post_file
        where fileId = #{fileId}
    </select>

    <delete id="delCom" parameterType="int">
        update post_com set able = 'F' where commid = #{comId}
    </delete>

</mapper>